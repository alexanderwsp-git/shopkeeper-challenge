<h1>{{ title }}</h1>
<canvas id="shopkeeperChart" width="400" height="200"></canvas>
<h2>Listings Data</h2>
<table border="1">
  <thead>
    <tr>
      <th>Listing ID</th>
      <th>Listing Month</th>
      <th>Listing Date</th>
      <th>Broker</th>
      <th>Revenue</th>
    </tr>
  </thead>
  <tbody>
    {{#each listingsTable}}
    <tr>
      <td>{{ listing_id}}</td>
      <td>{{month}}/{{year}}</td>
      <td>{{listing_date}}</td>
      <td>{{broker_name}}</td>
      <td>{{revenue}}</td>
    </tr>
    {{/each}}
  </tbody>
</table>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>

  const getRandomColor = () => {
    const letters = '0123456789ABCDEF';
    let color = '#';
    for (let i = 0; i < 6; i++) {
      color += letters[Math.floor(Math.random() * 16)];
    }
    return color;
  };

  const dataListings = {{{ listings }}};

  const brokers = {};
  const labels = new Set();

  dataListings.forEach(item => {
    const monthYear = `${item.month}/${item.year}`;
    labels.add(monthYear);

    if (!brokers[item.broker_name]) {
      brokers[item.broker_name] = {
        label: item.broker_name,
        data: {},
      };
    }

    brokers[item.broker_name].data[monthYear] = brokers[item.broker_name].data[monthYear]
      ? brokers[item.broker_name].data[monthYear] + 1
      : 1;
  });

  const chartLabels = Array.from(labels).sort((a, b) => {
    const [monthA, yearA] = a.split('/');
    const [monthB, yearB] = b.split('/');
    return new Date(yearA, monthA - 1) - new Date(yearB, monthB - 1);  // Sort by date
  });

  const datasets = Object.values(brokers).map(broker => ({
    label: broker.label,
    data: chartLabels.map(label => broker.data[label] || 0),
    borderColor: getRandomColor(), // Assign random color
    fill: false,
  }));

  const ctx = document.getElementById('shopkeeperChart').getContext('2d');
  const shopkeeperChart = new Chart(ctx, {
    type: 'line',
    data: {
      labels: chartLabels,
      datasets: datasets,
    },
    options: {
      scales: {
        y: { beginAtZero: true },
      },
    },
  });
</script>